// <auto-generated />
using System;
using GestionDesDVDs.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestionDesDVDs.Migrations
{
    [DbContext(typeof(BDW56_424rContext))]
    [Migration("20201123171915_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GestionDesDVDs.Models.Acteurs", b =>
                {
                    b.Property<int>("NoActeur")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Sexe")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.HasKey("NoActeur");

                    b.ToTable("Acteurs");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.Categories", b =>
                {
                    b.Property<int>("NoCategorie")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("NoCategorie");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.EmpruntsFilms", b =>
                {
                    b.Property<int>("NoExemplaire");

                    b.Property<DateTime>("DateEmprunt")
                        .HasColumnType("datetime");

                    b.Property<int>("NoUtilisateur");

                    b.HasKey("NoExemplaire");

                    b.HasIndex("NoUtilisateur");

                    b.ToTable("EmpruntsFilms");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.Exemplaires", b =>
                {
                    b.Property<int>("NoExemplaire");

                    b.Property<int>("NoUtilisateurProprietaire");

                    b.HasKey("NoExemplaire");

                    b.HasIndex("NoUtilisateurProprietaire");

                    b.ToTable("Exemplaires");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.Films", b =>
                {
                    b.Property<int>("NoFilm");

                    b.Property<int?>("AnneeSortie");

                    b.Property<int?>("Categorie");

                    b.Property<DateTime>("DateMaj")
                        .HasColumnName("DateMAJ")
                        .HasColumnType("datetime");

                    b.Property<int?>("DureeMinutes");

                    b.Property<int?>("FilmOriginal");

                    b.Property<int?>("Format");

                    b.Property<string>("ImagePochette")
                        .HasMaxLength(50);

                    b.Property<int?>("NbDisques");

                    b.Property<int?>("NoProducteur");

                    b.Property<int?>("NoRealisateur");

                    b.Property<int>("NoUtilisateurMaj")
                        .HasColumnName("NoUtilisateurMAJ");

                    b.Property<string>("Resume")
                        .HasMaxLength(500);

                    b.Property<string>("TitreFrancais")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("TitreOriginal")
                        .HasMaxLength(50);

                    b.Property<bool?>("VersionEtendue");

                    b.Property<string>("Xtra")
                        .IsRequired()
                        .HasColumnName("XTra")
                        .HasMaxLength(255);

                    b.HasKey("NoFilm");

                    b.HasIndex("Categorie");

                    b.HasIndex("Format");

                    b.HasIndex("NoProducteur");

                    b.HasIndex("NoRealisateur");

                    b.HasIndex("NoUtilisateurMaj");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.FilmsActeurs", b =>
                {
                    b.Property<int>("NoFilm");

                    b.Property<int>("NoActeur");

                    b.HasKey("NoFilm", "NoActeur");

                    b.HasAlternateKey("NoFilm");

                    b.HasIndex("NoActeur");

                    b.ToTable("FilmsActeurs");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.FilmsLangues", b =>
                {
                    b.Property<int>("NoFilm");

                    b.Property<int>("NoLangue");

                    b.HasKey("NoFilm", "NoLangue");

                    b.HasAlternateKey("NoFilm");

                    b.HasIndex("NoLangue");

                    b.ToTable("FilmsLangues");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.FilmsSousTitres", b =>
                {
                    b.Property<int>("NoFilm");

                    b.Property<int>("NoSousTitre");

                    b.HasKey("NoFilm", "NoSousTitre");

                    b.HasAlternateKey("NoFilm");

                    b.HasIndex("NoSousTitre");

                    b.ToTable("FilmsSousTitres");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.FilmsSupplements", b =>
                {
                    b.Property<int>("NoFilm");

                    b.Property<int>("NoSupplement");

                    b.HasKey("NoFilm", "NoSupplement");

                    b.HasAlternateKey("NoFilm");

                    b.HasIndex("NoSupplement");

                    b.ToTable("FilmsSupplements");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.Formats", b =>
                {
                    b.Property<int>("NoFormat")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("NoFormat");

                    b.ToTable("Formats");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.Langues", b =>
                {
                    b.Property<int>("NoLangue")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Langue")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("NoLangue");

                    b.ToTable("Langues");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.Preferences", b =>
                {
                    b.Property<int>("NoPreference")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("NoPreference");

                    b.ToTable("Preferences");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.Producteurs", b =>
                {
                    b.Property<int>("NoProducteur")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("NoProducteur");

                    b.ToTable("Producteurs");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.Realisateurs", b =>
                {
                    b.Property<int>("NoRealisateur")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("NoRealisateur");

                    b.ToTable("Realisateurs");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.SousTitres", b =>
                {
                    b.Property<int>("NoSousTitre")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LangueSousTitre")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("NoSousTitre");

                    b.ToTable("SousTitres");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.Supplements", b =>
                {
                    b.Property<int>("NoSupplement")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("NoSupplement");

                    b.ToTable("Supplements");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.TypesUtilisateur", b =>
                {
                    b.Property<string>("TypeUtilisateur")
                        .HasMaxLength(1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("TypeUtilisateur");

                    b.ToTable("TypesUtilisateur");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.Utilisateurs", b =>
                {
                    b.Property<int>("NoUtilisateur")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Courriel")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("MotPasse");

                    b.Property<string>("NomUtilisateur")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("TypeUtilisateur")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.HasKey("NoUtilisateur");

                    b.HasIndex("TypeUtilisateur");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.UtilisateursPreferences", b =>
                {
                    b.Property<int>("NoUtilisateur");

                    b.Property<int>("NoPreference");

                    b.Property<string>("Valeur")
                        .HasMaxLength(50);

                    b.HasKey("NoUtilisateur", "NoPreference");

                    b.HasAlternateKey("NoUtilisateur");

                    b.HasIndex("NoPreference");

                    b.ToTable("UtilisateursPreferences");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.EmpruntsFilms", b =>
                {
                    b.HasOne("GestionDesDVDs.Models.Utilisateurs", "NoUtilisateurNavigation")
                        .WithMany("EmpruntsFilms")
                        .HasForeignKey("NoUtilisateur")
                        .HasConstraintName("FK__EmpruntsF__NoUti__0EC32C7A");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.Exemplaires", b =>
                {
                    b.HasOne("GestionDesDVDs.Models.Utilisateurs", "NoUtilisateurProprietaireNavigation")
                        .WithMany("Exemplaires")
                        .HasForeignKey("NoUtilisateurProprietaire")
                        .HasConstraintName("FK__Exemplair__NoUti__119F9925");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.Films", b =>
                {
                    b.HasOne("GestionDesDVDs.Models.Categories", "CategorieNavigation")
                        .WithMany("Films")
                        .HasForeignKey("Categorie")
                        .HasConstraintName("FK__Films__Categorie__147C05D0");

                    b.HasOne("GestionDesDVDs.Models.Formats", "FormatNavigation")
                        .WithMany("Films")
                        .HasForeignKey("Format")
                        .HasConstraintName("FK__Films__Format__15702A09");

                    b.HasOne("GestionDesDVDs.Models.Producteurs", "NoProducteurNavigation")
                        .WithMany("Films")
                        .HasForeignKey("NoProducteur")
                        .HasConstraintName("FK__Films__NoProduct__184C96B4");

                    b.HasOne("GestionDesDVDs.Models.Realisateurs", "NoRealisateurNavigation")
                        .WithMany("Films")
                        .HasForeignKey("NoRealisateur")
                        .HasConstraintName("FK__Films__NoRealisa__1758727B");

                    b.HasOne("GestionDesDVDs.Models.Utilisateurs", "NoUtilisateurMajNavigation")
                        .WithMany("Films")
                        .HasForeignKey("NoUtilisateurMaj")
                        .HasConstraintName("FK__Films__NoUtilisa__16644E42");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.FilmsActeurs", b =>
                {
                    b.HasOne("GestionDesDVDs.Models.Acteurs", "NoActeurNavigation")
                        .WithMany("FilmsActeurs")
                        .HasForeignKey("NoActeur")
                        .HasConstraintName("FK__FilmsActe__NoAct__1C1D2798");

                    b.HasOne("GestionDesDVDs.Models.Films", "NoFilmNavigation")
                        .WithMany("FilmsActeurs")
                        .HasForeignKey("NoFilm")
                        .HasConstraintName("FK__FilmsActe__NoFil__1B29035F");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.FilmsLangues", b =>
                {
                    b.HasOne("GestionDesDVDs.Models.Films", "NoFilmNavigation")
                        .WithMany("FilmsLangues")
                        .HasForeignKey("NoFilm")
                        .HasConstraintName("FK__FilmsLang__NoFil__1EF99443");

                    b.HasOne("GestionDesDVDs.Models.Langues", "NoLangueNavigation")
                        .WithMany("FilmsLangues")
                        .HasForeignKey("NoLangue")
                        .HasConstraintName("FK__FilmsLang__NoLan__1FEDB87C");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.FilmsSousTitres", b =>
                {
                    b.HasOne("GestionDesDVDs.Models.Films", "NoFilmNavigation")
                        .WithMany("FilmsSousTitres")
                        .HasForeignKey("NoFilm")
                        .HasConstraintName("FK__FilmsSous__NoFil__22CA2527");

                    b.HasOne("GestionDesDVDs.Models.SousTitres", "NoSousTitreNavigation")
                        .WithMany("FilmsSousTitres")
                        .HasForeignKey("NoSousTitre")
                        .HasConstraintName("FK__FilmsSous__NoSou__23BE4960");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.FilmsSupplements", b =>
                {
                    b.HasOne("GestionDesDVDs.Models.Films", "NoFilmNavigation")
                        .WithMany("FilmsSupplements")
                        .HasForeignKey("NoFilm")
                        .HasConstraintName("FK__FilmsSupp__NoFil__269AB60B");

                    b.HasOne("GestionDesDVDs.Models.Supplements", "NoSupplementNavigation")
                        .WithMany("FilmsSupplements")
                        .HasForeignKey("NoSupplement")
                        .HasConstraintName("FK__FilmsSupp__NoSup__278EDA44");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.Utilisateurs", b =>
                {
                    b.HasOne("GestionDesDVDs.Models.TypesUtilisateur", "TypeUtilisateurNavigation")
                        .WithMany("Utilisateurs")
                        .HasForeignKey("TypeUtilisateur")
                        .HasConstraintName("FK__Utilisate__TypeU__08162EEB");
                });

            modelBuilder.Entity("GestionDesDVDs.Models.UtilisateursPreferences", b =>
                {
                    b.HasOne("GestionDesDVDs.Models.Preferences", "NoPreferenceNavigation")
                        .WithMany("UtilisateursPreferences")
                        .HasForeignKey("NoPreference")
                        .HasConstraintName("FK__Utilisate__NoPre__0BE6BFCF");

                    b.HasOne("GestionDesDVDs.Models.Utilisateurs", "NoUtilisateurNavigation")
                        .WithMany("UtilisateursPreferences")
                        .HasForeignKey("NoUtilisateur")
                        .HasConstraintName("FK__Utilisate__NoUti__0AF29B96");
                });
#pragma warning restore 612, 618
        }
    }
}
